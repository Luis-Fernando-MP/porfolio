@use '@sass/config/vars' as *;
@use '@sass/config/typography' as *;
@use '@sass/utils/media' as m;
@use '@sass/utils/scrollbar' as *;
@use 'sass:map';

:root {
  --bg-primary: 25, 26, 27;
  --bg-secondary: 32, 33, 34;
  --bg-tertiary: 58, 59, 61;

  // Fuentes
  --fnt-primary: 235, 235, 235;
  --fnt-secondary: 170, 172, 174;
  --fnt-tertiary: 110, 112, 114;
  --fnt-active: 255, 255, 255;

  // Principales
  --tn-primary: 32, 108, 255;
  --tn-secondary: 36, 66, 125;

  // Fuentes
  --xl-font-size: 3.5rem;
  --h1-font-size: 1.6rem;
  --h2-font-size: 1.4rem;
  --h3-font-size: 1.2rem;
  --h4-font-size: 1rem;
  --h5-font-size: 1rem;
  --p-font-size: 0.95rem;
}

*,
::before,
::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  border: none;

  list-style: none;

  outline: none;

  &:focus {
    outline: none;
  }
}

html {
  scroll-behavior: smooth;

  position: relative;

  overflow-x: clip;
  overflow-y: scroll;

  width: 100dvw;
  min-height: 100vh;

  font-size: $family-size;

  @include scroll-hidden;
}

body {
  overflow-x: clip;

  width: 100%;
  height: fit-content;

  font-family: $font1;
  color: rgb($fn1);

  background-color: rgb($bg1);

  // Typography
  @each $tag, $props in $typography {
    #{$tag} {
      font-size: map.get($props, size);
      font-weight: map.get($props, weight);
      color: map.get($props, color);
    }
  }

  button,
  select {
    font-size: map.get(map.get($typography, 'a'), size);
    font-weight: map.get(map.get($typography, 'a'), weight);
    font-style: normal;
    color: map.get(map.get($typography, 'a'), color);

    background: none;
  }

  span,
  address,
  textarea,
  small,
  label,
  figcaption,
  input {
    font-family: $font1;
    font-size: map.get(map.get($typography, 'p'), size);
    font-weight: map.get(map.get($typography, 'p'), weight);
    color: rgb($fn3);
  }

  .icon,
  .lucide {
    display: block;
    width: $icon;
    height: $icon;
  }

  b {
    color: rgb($fn3);
  }

  .lucide {
    stroke: rgb($fn1);
    stroke-width: 2;
  }

  ::selection {
    color: rgb($fn1);
    background-color: rgb($tn1);
  }

  input {
    width: min-content;

    &:focus {
      outline: none;
    }
  }

  input[type='number'] {
    appearance: textfield;

    &::-webkit-inner-spin-button,
    &::-webkit-outer-spin-button {
      margin: 0;
      appearance: none;
    }
  }

  a {
    text-decoration: none;
  }

  button {
    cursor: pointer;
  }
}

@include m.mediumScreen {
  html {
    font-size: 12px;
  }

  body {
    .icon,
    .lucide {
      width: $icon * 0.8;
      height: $icon * 0.8;
    }
  }
}

@include m.smallerScreen {
  html {
    font-size: 10px;
  }
}
